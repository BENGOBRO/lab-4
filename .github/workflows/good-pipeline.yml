name: Good Pipeline

# Указывем, когда запускать pipeline
on:
  push:
    branches: [ "main" ]

# Указываем уровень доступа в репозитории
permissions:
  contents: read

# Указываем задачи, которые будут выполняться при выполнении pipeline
jobs:

  # Прогонка тестов проекта
  Test:

    # Образ, на котором будет выполняться задача
    runs-on: ubuntu-latest

    # Шаги выполнения задачи
    steps:

      # Шаг проверок от actions
      - name: Checkout
        uses: actions/checkout@v4

      # Шаг установки JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: ${{ vars.JAVA_DISTRIBUTION }}

      # Шаг установки Gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: ${{ vars.GRADLE_VERSION }}

      # Шаг сборки проекта через ./gradlew
      - name: Run tests
        run:
          ./gradlew clean build

  # Сборка и отправка в Docker Hub образа Docker
  Publish:

    # Без задачи Test не будет исполняться задача Publish
    needs: Test

    # Образ, на котором будет выполняться задача
    runs-on: ubuntu-latest

    # Шаги выполнения задачи
    steps:

      # Шаг проверок от actions
      - name: Checkout
        uses: actions/checkout@v4

      # Шаг установки JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: ${{ vars.JAVA_DISTRIBUTION }}

      # Шаг установки Gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: ${{ vars.GRADLE_VERSION }}

      # Шаг сборки проекта через ./gradlew
      - name: Run build
        run:
          ./gradlew clean build -x test

      # Шаг авторизации в сервисе Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Шаг сборки образа
      - name: Build image
        run: |
          docker build -t ${{ vars.DOCKERHUB_REPOSITORY }}:${{ vars.DOCKER_TAG_VERSION }} .

      # Шаг отправки образа в Docker Hub
      - name: Build and push
        run: |
          docker push ${{ vars.DOCKERHUB_REPOSITORY }}

  Deploy:
    needs: [Test, Publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Connect to remote server
        run: |
          sshpass -p ${{ secrets.SSH_PRIVATE_KEY }} ssh -o StrictHostKeyChecking=no -p 22 ${{ secrets.SSH_USER}}@${{ secrets.SSH_HOST }}
        env:
          SSHPASS: ${{ secrets.SSH_PRIVATE_KEY}}

      - name: Pull image
        run: |
          docker pull ${{ vars.DOCKERHUB_REPOSITORY }}:${{ vars.DOCKER_TAG_VERSION }}

      - name: Run container
        run: |
          docker run ${{ vars.DOCKERHUB_REPOSITORY }}:${{ vars.DOCKER_TAG_VERSION }}

      - name: Stop container
        run: |
          docker stop ${{ vars.DOCKERHUB_REPOSITORY }}:${{ vars.DOCKER_TAG_VERSION }}